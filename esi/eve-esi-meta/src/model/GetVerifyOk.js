/*
 * ESI Meta Spec
 * ESI specs and miscellaneous routes
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.EsiMetaSpec) {
      root.EsiMetaSpec = {};
    }
    root.EsiMetaSpec.GetVerifyOk = factory(root.EsiMetaSpec.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The GetVerifyOk model module.
   * @module model/GetVerifyOk
   * @version 0.1
   */

  /**
   * Constructs a new <code>GetVerifyOk</code>.
   * SSO /verify JSON
   * @alias module:model/GetVerifyOk
   * @class
   * @param characterID {Number} Token owner's character ID
   */
  var exports = function(characterID) {
    this.characterID = characterID;
  };

  /**
   * Constructs a <code>GetVerifyOk</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetVerifyOk} obj Optional instance to populate.
   * @return {module:model/GetVerifyOk} The populated <code>GetVerifyOk</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('CharacterID'))
        obj.characterID = ApiClient.convertToType(data['CharacterID'], 'Number');
      if (data.hasOwnProperty('CharacterName'))
        obj.characterName = ApiClient.convertToType(data['CharacterName'], 'String');
      if (data.hasOwnProperty('CharacterOwnerHash'))
        obj.characterOwnerHash = ApiClient.convertToType(data['CharacterOwnerHash'], 'String');
      if (data.hasOwnProperty('ExpiresOn'))
        obj.expiresOn = ApiClient.convertToType(data['ExpiresOn'], 'String');
      if (data.hasOwnProperty('IntellectualProperty'))
        obj.intellectualProperty = ApiClient.convertToType(data['IntellectualProperty'], 'String');
      if (data.hasOwnProperty('Scopes'))
        obj.scopes = ApiClient.convertToType(data['Scopes'], 'String');
      if (data.hasOwnProperty('TokenType'))
        obj.tokenType = ApiClient.convertToType(data['TokenType'], 'String');
    }
    return obj;
  }

  /**
   * Token owner's character ID
   * @member {Number} characterID
   */
  exports.prototype.characterID = undefined;

  /**
   * Token owner's character name
   * @member {String} characterName
   */
  exports.prototype.characterName = undefined;

  /**
   * Hash of the character's owner. If the character is sold or otherwise transferred, this will change
   * @member {String} characterOwnerHash
   */
  exports.prototype.characterOwnerHash = undefined;

  /**
   * Expiry time of the token (not RFC3339)
   * @member {String} expiresOn
   */
  exports.prototype.expiresOn = undefined;

  /**
   * The IP which generated the token
   * @member {String} intellectualProperty
   */
  exports.prototype.intellectualProperty = undefined;

  /**
   * Space separated list of scopes the token is valid for
   * @member {String} scopes
   */
  exports.prototype.scopes = undefined;

  /**
   * Type of access token
   * @member {String} tokenType
   */
  exports.prototype.tokenType = undefined;


  return exports;

}));
