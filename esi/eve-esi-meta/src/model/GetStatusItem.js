/*
 * ESI Meta Spec
 * ESI specs and miscellaneous routes
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.EsiMetaSpec) {
      root.EsiMetaSpec = {};
    }
    root.EsiMetaSpec.GetStatusItem = factory(root.EsiMetaSpec.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The GetStatusItem model module.
   * @module model/GetStatusItem
   * @version 0.1
   */

  /**
   * Constructs a new <code>GetStatusItem</code>.
   * Per route status
   * @alias module:model/GetStatusItem
   * @class
   * @param endpoint {String} ESI Endpoint cluster advertising this route
   * @param method {String} Swagger defined method
   * @param route {String} Swagger defined route, not including version prefix
   * @param status {module:model/GetStatusItem.StatusEnum} Vague route status. Green is good, yellow is degraded, meaning slow or potentially dropping requests. Red means most requests are not succeeding and/or are very slow (5s+) on average.
   * @param tags {Array.<String>} Swagger tags applicable to this route
   */
  var exports = function(endpoint, method, route, status, tags) {
    this.endpoint = endpoint;
    this.method = method;
    this.route = route;
    this.status = status;
    this.tags = tags;
  };

  /**
   * Constructs a <code>GetStatusItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetStatusItem} obj Optional instance to populate.
   * @return {module:model/GetStatusItem} The populated <code>GetStatusItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('endpoint'))
        obj.endpoint = ApiClient.convertToType(data['endpoint'], 'String');
      if (data.hasOwnProperty('method'))
        obj.method = ApiClient.convertToType(data['method'], 'String');
      if (data.hasOwnProperty('route'))
        obj.route = ApiClient.convertToType(data['route'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], ['String']);
    }
    return obj;
  }

  /**
   * ESI Endpoint cluster advertising this route
   * @member {String} endpoint
   */
  exports.prototype.endpoint = undefined;

  /**
   * Swagger defined method
   * @member {String} method
   */
  exports.prototype.method = undefined;

  /**
   * Swagger defined route, not including version prefix
   * @member {String} route
   */
  exports.prototype.route = undefined;

  /**
   * Vague route status. Green is good, yellow is degraded, meaning slow or potentially dropping requests. Red means most requests are not succeeding and/or are very slow (5s+) on average.
   * @member {module:model/GetStatusItem.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * Swagger tags applicable to this route
   * @member {Array.<String>} tags
   */
  exports.prototype.tags = undefined;



  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "green"
     * @const
     */
    green: "green",

    /**
     * value: "yellow"
     * @const
     */
    yellow: "yellow",

    /**
     * value: "red"
     * @const
     */
    red: "red"
  };

  return exports;

}));
