/*
 * ESI Meta Spec
 * ESI specs and miscellaneous routes
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.EsiMetaSpec) {
      root.EsiMetaSpec = {};
    }
    root.EsiMetaSpec.WebUIApi = factory(root.EsiMetaSpec.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * WebUI service.
   * @module api/WebUIApi
   * @version 0.1
   */

  /**
   * Constructs a new WebUIApi. 
   * @alias module:api/WebUIApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getDiffVersionAVersionB operation.
     * @callback module:api/WebUIApi~getDiffVersionAVersionBCallback
     * @param {String} error Error message, if any.
     * @param {'String'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Diff route
     * Diff two ESI specs
     * @param {module:model/String} versionA Swagger spec version to compare with
     * @param {module:model/String} versionB Swagger spec version to compare against
     * @param {Object} opts Optional parameters
     * @param {String} opts.userAgent Client identifier, takes precedence over headers
     * @param {String} opts.xUserAgent Client identifier, takes precedence over User-Agent
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {module:api/WebUIApi~getDiffVersionAVersionBCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'String'}
     */
    this.getDiffVersionAVersionB = function(versionA, versionB, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'versionA' is set
      if (versionA === undefined || versionA === null) {
        throw new Error("Missing the required parameter 'versionA' when calling getDiffVersionAVersionB");
      }

      // verify the required parameter 'versionB' is set
      if (versionB === undefined || versionB === null) {
        throw new Error("Missing the required parameter 'versionB' when calling getDiffVersionAVersionB");
      }


      var pathParams = {
        'version_a': versionA,
        'version_b': versionB
      };
      var queryParams = {
        'user_agent': opts['userAgent'],
        'datasource': opts['datasource'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-User-Agent': opts['xUserAgent']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/html; charset=utf-8'];
      var returnType = 'String';

      return this.apiClient.callApi(
        '/diff/{version_a}/{version_b}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getUi operation.
     * @callback module:api/WebUIApi~getUiCallback
     * @param {String} error Error message, if any.
     * @param {'String'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * SwaggerUI route (v3)
     * ESI web UI. This is an open source project. If you find ESI web UI specific bugs, please report them to https://github.com/esi/esi-swagger-ui/issues
     * @param {Object} opts Optional parameters
     * @param {String} opts.userAgent Client identifier, takes precedence over headers
     * @param {String} opts.xUserAgent Client identifier, takes precedence over User-Agent
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {module:model/String} opts.version The Swagger spec version to display (default to latest)
     * @param {module:api/WebUIApi~getUiCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'String'}
     */
    this.getUi = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'user_agent': opts['userAgent'],
        'datasource': opts['datasource'],
        'version': opts['version'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-User-Agent': opts['xUserAgent']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/html; charset=utf-8'];
      var returnType = 'String';

      return this.apiClient.callApi(
        '/ui/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
