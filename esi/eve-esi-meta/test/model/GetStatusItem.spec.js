/*
 * ESI Meta Spec
 * ESI specs and miscellaneous routes
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EsiMetaSpec);
  }
}(this, function(expect, EsiMetaSpec) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetStatusItem', function() {
      beforeEach(function() {
        instance = new EsiMetaSpec.GetStatusItem();
      });

      it('should create an instance of GetStatusItem', function() {
        // TODO: update the code to test GetStatusItem
        expect(instance).to.be.a(EsiMetaSpec.GetStatusItem);
      });

      it('should have the property endpoint (base name: "endpoint")', function() {
        // TODO: update the code to test the property endpoint
        expect(instance).to.have.property('endpoint');
        // expect(instance.endpoint).to.be(expectedValueLiteral);
      });

      it('should have the property method (base name: "method")', function() {
        // TODO: update the code to test the property method
        expect(instance).to.have.property('method');
        // expect(instance.method).to.be(expectedValueLiteral);
      });

      it('should have the property route (base name: "route")', function() {
        // TODO: update the code to test the property route
        expect(instance).to.have.property('route');
        // expect(instance.route).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property tags (base name: "tags")', function() {
        // TODO: update the code to test the property tags
        expect(instance).to.have.property('tags');
        // expect(instance.tags).to.be(expectedValueLiteral);
      });

    });
  });

}));
